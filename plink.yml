docs:
  - filename: "CAD_Files_OpenROV_v2_8/STEP/Main Structure/Top Plate.stp"
    handler:
      name: "STEP" # the step handler creates a part with type as the file name (if type is not specified)

  - filename: "CAD_Files_OpenROV_v2_8/STEP/Main Structure/Bulkhead.stp"
    handler:
      name: "STEP" # the step handler creates a part with type as the file name (if type is not specified)

  - filename: "CAD_Files_OpenROV_v2_8/STEP/Main Structure/Handle.stp"
    handler:
      name: "STEP" # the step handler creates a part with type as the file name (if type is not specified)

  - filename: "CAD_Files_OpenROV_v2_8/STEP/Main Structure/Vert Moto Mount.stp"
    handler:
      name: "STEP" # the step handler creates a part with type as the file name (if type is not specified)

  - filename: "CAD_Files_OpenROV_v2_8/STEP/Main Structure/Harness Pusher Final.stp"
    handler:
      name: "STEP" # the step handler creates a part with type as the file name (if type is not specified)

  - filename: "CAD_Files_OpenROV_v2_8/STEP/Electronics Tube/Electronics Chassis/Aft/Electronics Chassis Main.stp"
    handler:
      name: "STEP"
      config:
        type: "Main"

  - filename: "CAD_Files_OpenROV_v2_8/STEP/Electronics Tube/Electronics Chassis/Aft/Electronics Chassis Servo Mount.stp"
    handler:
      name: "STEP"
      config:
        type: "Servo Mount"

  - filename: "CAD_Files_OpenROV_v2_8/STEP/Electronics Tube/Electronics Chassis/Aft/Electronics Chassis Side.stp"
    handler:
      name: "STEP"
      config:
        type: "Side"

  - filename: "CAD_Files_OpenROV_v2_8/STEP/Electronics Tube/Electronics Chassis/Aft/Electronics Chassis Wall.stp"
    handler:
      name: "STEP"
      config:
        type: "Wall"
      
  - filename: "CAD_Files_OpenROV_v2_8/STEP/Electronics Tube/Electronics Chassis/Forward/Arm 6mm.stp"
    handler:
      name: "STEP" # the step handler creates a part with type as the file name (if type is not specified)

  - filename: "CAD_Files_OpenROV_v2_8/STEP/Electronics Tube/Electronics Chassis/Forward/Arm 3mm.stp"
    handler:
      name: "STEP" # the step handler creates a part with type as the file name (if type is not specified)

  - filename: "CAD_Files_OpenROV_v2_8/STEP/Electronics Tube/Electronics Chassis/Forward/Face Plate.stp"
    handler:
      name: "STEP" # the step handler creates a part with type as the file name (if type is not specified)
      
  - filename: "CAD_Files_OpenROV_v2_8/STEP/Shell/Shell.stp"
    handler:
      name: "STEP" # the step handler creates a part with type as the file name (if type is not specified)
      
  - filename: "CAD_Files_OpenROV_v2_8/STEP/Shell/Fin.stp"
    handler: 
      name: "STEP"
      config:  # this config is for the handler
        type: "Fin" # STEP handler creates a part class for each step. Type defines the "type" of part created.

  - filename: "CAD_Files_OpenROV_v2_8/DXF/Shell/Fin_3 millimeter_Polypro.dxf"
    handler:
      name: "DXF" # dxf handler creates vectors

  - filename: "CAD_Files_OpenROV_v2_8/DXF/Shell/Shell_3%20millimeter_Polypro.dxf"
    handler:
      name: "DXF"

# the assembly tree
# instatiates assemblies and parts
tree:
  - name: "OpenROV 2.8" # if type isn't provided then it is the same as "name"
  
# defines types of assemblies
assemblies:
  - type: "OpenROV 2.8"
    subassemblies:
      # same naming rules in parts -- you could instatiate two "Shell" subassemblies and give them names.
      - name: "Shell"
        # this is redundant when name == assembly
        type: "Shell" 
      - name: "Main Structure"
      - name: "Electronics Tube"
    parts: []  

  - type: "Shell" # if only assembly is provided, then this is a "class"
    parts:
      - name: "Shell"
        type: "Shell" # also redundant, all parts contain reference to a solid
      - name: "Fin" # the solid implied here is "Fin"

  - type: "Main Structure"
    parts:
      # XXX unnamed parts are not supported yet
      # you can also just omit the name: and list strings. Same as doing:
      #
      # - name: "foo"
      #   part: "foo"
      #
      #- "Top Plate"
      #- "Bulkhead"
      - name: "Top Plate"
      - name: "Bulkhead"
      - name: "Handle"
      - name: "Harness Pusher Final"
      - name: "Vert Moto Mount"

  - type: "Electronics Tube"
    subassemblies:
# ignore these for now
      - name: "Electronics Chassis"
#      - name: "Pass Through End Cap"
#      - name: "Non-Pass Through End Cap"
#    parts:
#      - name: "Tube"

  # XXX TODO, probably going to be bad to have a global assembly namespace. Later need to have another way to do this probably.
  - type: "Electronics Chassis"
    subassemblies:
      - name: "Camera Mount"
    parts:
      - name: "Main"
      - name: "Left Servo Mount"
        type: "Servo Mount"
      - name: "Right Servo Mount"
        type: "Servo Mount"
      - name: "Left Side"
        type: "Side"
      - name: "Right Side"
        type: "Side"
      - name: "Wall"

  - type: "Camera Mount"
    subassemblies:
      - name: "Left Arm"
        type: "Camera Mount Arm"
      - name: "Right Arm"
        type: "Camera Mount Arm"
    parts:
      - name: "Face Plate"

  - type: "Camera Mount Arm"
    parts:
      - name: "Arm 3mm"
      - name: "Arm 6mm"
        
# this is where object can be purchased from these could be loaded in
# from the system bom as well... but that file is a mess and in
# another repo so going to figure that out later.
sourced:
  # if no name is provided, then the canonical name for the source will be used. for "raw material" it is:
  # "class, type, material, thickness"
  - class: "stock"
    type: "sheet"
    material: "acrylic"
    thickness: "3mm"
    vendors:
      - "http://www.mcmaster.com/#8560K259"
  
# this is a list of fabrications. a fabrication take a part(s) or assembl(ies) (any thing that implments "cad.Thing") as an input and produces a Thing as an output.
# examples would a piece of raw sheet plastic (from a source) and laser cut using a DXF file to produce a solid. (e.g. most of the pieces in the OpenROV cad)
fabrications:
  - inputs:
      - class: "stock" # redundant if using canonical name
        name: "stock, sheet, acrylic, 3mm" # canonical name
      - class: "vectors"
        name: "Shell" # this will come from the Shell.dxf in this example
  - outputs:
      - class: "part"
        type: "Shell"
